import React,{Component} from 'react';
import {View,Text,TextInput,StyleSheet,Button} from 'react-native';
import PushNotification from 'react-native-push-notification';
import socketIOClient from "socket.io-client";
export default class BoxChat extends Component{
    constructor(props){
        super(props);
        this.state={
            txtsms:"",
            endpoint: "http://112.213.88.117:8888",
            check:false
        }
    }
    componentDidMount() {
        const { endpoint } = this.state;
        const socket = socketIOClient(endpoint); 
        socket.on("hoiam", function(sms){
             PushNotification.localNotificationSchedule({
                //... You can use all the options from localNotifications
                id: (Math.floor(Date.now()/1000) + (5 * 1000)).toString() , // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
                ticker: "Thông báo mới!", // (optional)
                autoCancel: true, // (optional) default: true
                largeIcon: "ic_launcher", // (optional) default: "ic_launcher"
                smallIcon: "ic_notification", // (optional) default: "ic_notification" with fallback for "ic_launcher"
               // bigText: "Title:"+sms, // (optional) default: "message" prop
                color: "red", // (optional) default: system default
                vibrate: true, // (optional) default: true
                vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
                title: "Title:"+sms,
                message: "Content:"+sms, // (required)
                date: new Date(Date.now() + (5 * 1000)), // in 60 secs
                number: '10',
              });
        });
    }
    _onSend=()=>{
        const { endpoint } = this.state;
        const socket = socketIOClient(endpoint);
        socket.emit("chat_react",{tinnhan:this.state.txtsms});
        // socket.on("hoiam", function(sms){
        //      PushNotification.localNotificationSchedule({
        //             id: 0, // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
        //             ticker: "Tin nhan hoi am 2", // (optional)
        //             autoCancel: true, // (optional) default: true
        //             largeIcon: "ic_launcher", // (optional) default: "ic_launcher"
        //             smallIcon: "ic_notification", // (optional) default: "ic_notification" with fallback for "ic_launcher"
        //             bigText: "My big text that will be shown when notification is expanded", // (optional) default: "message" prop
        //             subText: "This is a subText", // (optional) default: none
        //             color: "red", // (optional) default: system default
        //             vibrate: true, // (optional) default: true
        //             vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
        //             tag: 'some_tag', // (optional) add tag to message
        //             group: "group", // (optional) add group to message
        //             ongoing: false, // (optional) set whether this is an "ongoing" notification
        //             message: sms, // (required)
        //             date: new Date(Date.now() + (5 * 1000)) // in 60 secs
        //           });
        // });
    }
    
    render(){
        return(
            <View style={styles.container}>
                <Text style={styles.titleBoxchat}>Box chat</Text>
                <View style={styles.boxchat}>
                    <TextInput 
                     {...this.props} // Inherit any props passed to it; e.g., multiline, numberOfLines below
                     editable = {true}
                     maxLength = {40}
                     onChangeText={(tinnhan)=>this.setState({txtsms:tinnhan})}
                    />
                    <Button title="Send" onPress={this._onSend}></Button>
                </View>
            </View>
        )
    }
}
const styles = StyleSheet.create({
    container:{
        flex: 1
    },
    titleBoxchat:{
        fontSize: 20
    }

})